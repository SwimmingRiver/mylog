about db

server : client가 요구한 것을 보여주는 프로그램 
   
react server 연동

강의 필기) 
강의는 express를 썼다
server.js 와 사용할 react 폴더 생성
개발 후 react는 build 해서 html 만들기

./server.js

const express = require('express')
const app = express()
const path = require('path')

app.listen(8080, function(){
    console.log('listening on 8080')
})
app.use(express.static(path.join(__dirname,'react html의 상위폴더')))// 해당 폴더 하위목록들 사용선언(?)

app.get('/',function(request,answer){
    answer.sendFile(path.join(__dirname,'react html 파일 경로'))
})

app.get('*',function(request,answer){
    answer.sendFile(path.join(__dirname,'react html 파일 경로'))
}) // 주소창에 다른 주소를 적는 것은 서버에 요청한 것이고 react 라우터로 만든 페이지를 부르도록 하기위해 필요
//*은 모든 경로를 의미 등록되지 않은 주소에 접속시도 하면 'react html 파일 경로' 로 보냄 -> 리액트 라우터가 만든 페이지로 보내줌
// 최하단에 작성

db data 가져오기 
user 가 server에 db값을 요청하면 db data만 가지고 역순으로 전송됨
html을 서버가 만들면 server-side rendering
html을 react가 만들면 client-side rendering

ex) db에 있는 상품명 불러오기

app.use(express.json());
var cors = require('cors');// cors 라이브러리 설치
app.use(cors());
//ajax 원활하게 사용하기 위함

app.get('/product',function(request,answer){
    answer.json({name:'item1'})
})